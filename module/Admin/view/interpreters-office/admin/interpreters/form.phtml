<?php
/**
 *  module/Admin/view/interpreters-office/admin/people/form.phtml
 *  view script for rendering people create|update form
 */
$this->headTitle($this->title);
if ($this->errorMessage) : ?>
<div class="alert alert-danger"><?php echo $this->errorMessage ?></div>
<?php
return;
endif;
$formAction = strstr($this->title, 'add') ? $this->url('interpreters/add')
    : $this->url('interpreters/edit', ['id' => $this->id ]);

$form = $this->form;
$form->add([
    'name' => 'submit',
    'type' => 'Zend\Form\Element\Submit',
     'attributes' => ['value' => 'save','class'=>'btn btn-success btn-lg'],
])->setAttribute('method', 'post')
   ->setAttribute('action', $formAction)
   ->setAttribute('class', 'form-horizontal')    ;
?>
<div class="center-block" style="max-width:750px"><!-- wrapper -->
<h2><?php echo $this->title ?></h2>
<?php

$form->prepare();
$fieldset = $form->get('interpreter');
echo $this->form()->openTag($form);?>
<div class="form-group">
<?php
$hat = $fieldset->get('hat');?>
    <div class="form-group">
        <label class="control-label col-sm-3"><?php echo $hat->getLabel()?></label>
        <div class="col-sm-9"><?php echo $this->formSelect($hat),$this->formElementErrors($hat) ?>            
        </div>
    </div>
</div>
<?php
 // text inputs
foreach (['lastname','firstname','middlename','email','officePhone','mobilePhone'] as $elementName) :
    $element = $fieldset->get($elementName);?>
<div class="form-group">
    <label class="control-label col-sm-3"><?php echo $element->getLabel()?></label>
    <div class="col-sm-9"><?php echo $this->formText($element),$this->formElementErrors($element) ?>            
    </div>
</div>
<?php
endforeach;
$active = $fieldset->get('active');?>
<div class="form-group">
    <label class="control-label col-sm-3"><?php echo $active->getLabel()?></label>
    <div class="col-sm-9"><?php echo $this->formCheckbox($active),$this->formElementErrors($active) ?>            
    </div>
 </div>

<div class="form-group">
    <label class="control-label col-sm-3">languages</label>
    <div class="col-sm-9"><?php 
    $languageSelect = $fieldset->get('language-select'); 
    /** @todo figure out where validator should be attached, and how to get error messages */
    echo $this->formSelect($languageSelect);
    //,$this->formElementErrors($active) ?>            
    </div>
    <table class="table col-sm-offset-3 col-sm-9" style="border:1px dotted red">
        <thead>
        <th>language</th>
        <th>fed certification</th>
        <th></th>
        </thead>
        <tbody>
<?php 
    $entity = $form->getObject();
    $interpreterLanguages = $entity->getInterpreterLanguages();
    if (count($interpreterLanguages)) :     
        $i = -1;
        foreach ($interpreterLanguages as $ilanguage) :
        ?>
            <tr>
                <td><?php echo $ilanguage->getLanguage() ?></td>
                <td><?php echo $ilanguage->getFederalCertification() ?></td>
                <td>[x]</td>
            </tr>
            <!-- 
            <div class="col-sm-offset-3 col-sm-4"><?php echo $ilanguage->getLanguage() ?></div>
             <div class="col-sm-4"><?php echo $ilanguage->getFederalCertification() ?></div>
             <div class="col-sm-1">[x]</div>
        -->
        <?php
        
        endforeach;
    endif;
?>  </tbody>
    </table>
</div>

<?php 
// shit should be rendered as a collection:
// throws 'Object provided to Escape helper, but flags do not allow recursion'
// when already hydrated
//echo $this->formCollection($fieldset->get('interpreterLanguages'));
$interpreterLanguagesFieldset = $fieldset->get('interpreterLanguages');
$entity = $form->getObject();
$interpLanguages = $entity->getInterpreterLanguages();
echo "DEBUG: language count is ".count($interpLanguages);
if (count($interpLanguages)) {
    echo " ...",(string)$interpLanguages[0]->getLanguage();
}
if (false):
$i = -1;
foreach ($interpreterLanguagesFieldset as $thing) { // fieldset
    echo '<div class="interpreter-language">';
    echo $this->formSelect($thing->get('language'));//, $this->formHidden($thing->get('interpreter'));
    //name="interpreter[interpreterLanguages][0][language]
    ?><input type="hidden" name="interpreter[interpreterLanguages][<?php echo ++$i?>][interpreter]" value="<?php echo $this->id?>"><?php echo "</div>";
}
?><?php endif; ?><!-- <pre><?php //print_r(get_class_methods($interpreterLanguages)); ?></pre> -->




<!-- --------------------------------------------------------------------    -->
<?php if (false):  // experimental. disable this for now
$languages = $fieldset->get('language-select'); 
$languages_element = $fieldset->get('interpreterLanguages')  ?>
<div class="form-group">
    <label class="control-label col-sm-3"><?php echo $languages->getLabel()?></label>
    <div class="col-sm-9"><?php echo 
        $this->formSelect($languages),// for the UI
        $this->formSelect($languages_element), // for actual data, hidden
        $this->formElementErrors($languages_element) ?>
        <!--
        maybe not....
        <ul id="languages-list" class="list-group"></ul>            
        -->
    </div>
 </div>
<?php endif; ///if (false)  ?>
<!-- --------------------------------------------------------------------    -->
<div class="form-group">
    <div class="col-sm-offset-3 col-sm-9">
    <?php
    $csrf = $form->get('csrf');
    echo $this->formHidden($csrf),$this->formElementErrors($csrf) ;
    echo $this->formHidden($fieldset->get('id'));
    echo $this->formSubmit($form->get('submit'));?></div>
</div>
<?php echo $this->form()->closeTag(); ?>
</div><!-- /wrapper -->
<script type="text/javascript">
    
/** dynamically add a language. @todo live in its own file ? */
// no point in typing this more than once
var languageElementName = "interpreter[interpreterLanguages][]";
$(function(){
    var select = $('#language-select');
    //var list = $('#languages-list');
    var languageCount = $('div.interpreter-language').length;
    select.on("click",function(){
        
        
    });
    
    if (false) {
    // when form is (re)loaded, create list from hidden select element
    $('#interpreterLanguages option:selected').each(function(){ 
			var option = $(this);
			createLanguageItem(option).appendTo(list);
			option.removeAttr('selected');
    });
    // when language select menu item is chosen, add it to the list
    select.on("change",function(){
        if (! select.val()) {
            return;
        }
        var option = select.children(':selected');
        var language = option.text();
        if (list.children(':contains("'+language+'")').length) {
            return;
        }
        createLanguageItem(option).appendTo(list);
        select.val('');
    });   
    }
    

    //  testing
    $('#hat').val(3);
    $('#lastname').val("Doink");
    $('#firstname').val("Boink");
    select.children(':contains("French")').attr({selected:"selected"}).trigger("change");
});
/**
 * helper function to create li element
 * not currently in use!
 * @param option jQuery with one <option> element
 * @returns jQuery with one <li> element
 */
createLanguageItem = function(option)
{
    var li = $('<li>').addClass('list-group-item');
    var input = $('<input>').attr({
            type: "hidden",
            name: languageElementName,
            value: option.attr('value')
        });
    return li.text(option.text()).append(input);
};
</script>