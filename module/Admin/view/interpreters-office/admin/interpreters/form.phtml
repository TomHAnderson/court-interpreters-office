<?php
use Zend\Form\Element;
/**
 *  module/Admin/view/interpreters-office/admin/people/form.phtml
 *  view script for rendering people create|update form
 */
$this->headTitle($this->title);
$this->headLink()->appendStylesheet($this->basePath('css/jquery-bootstrap-datepicker.css'));
$this->headScript()
        ->appendFile($this->basePath('js/lib/modernizr-custom.js'))
        ->appendFile($this->basePath('js/lib/jquery-ui/jquery-ui.min.js'))
        ->appendFile($this->basePath('js/lib/moment/min/moment.min.js'));

if ($this->errorMessage) : ?>
<div class="alert alert-danger"><?php echo $this->errorMessage ?></div>
<?php
return;
endif;
$formAction = strstr($this->title, 'add') ? $this->url('interpreters/add')
    : $this->url('interpreters/edit', ['id' => $this->id ]);

$form = $this->form;
$form->add([
    'name' => 'submit',
    'type' => 'Zend\Form\Element\Submit',
     'attributes' => ['value' => 'save','class'=>'btn btn-success btn-lg'],
])->setAttribute('method', 'post')
   ->setAttribute('action', $formAction)
   ->setAttribute('class', 'form-horizontal')    ;
?>
<div class="center-block row" style="max-width:800px"><!-- wrapper -->
    <h2><?php echo $this->title ?></h2>
    <?php
    $form->prepare();
    $fieldset = $form->get('interpreter');
    echo $this->form()->openTag($form);?>        
        
        <ul id="nav-tabs" class="nav nav-tabs" role="tablist"><!-- nav tabs -->
            <li role="presentation"><a href="#contact" aria-controls="contact" role="tab" data-toggle="tab">contact info</a></li>
            <li role="presentation"><a href="#languages-pane" aria-controls="languages" role="tab" data-toggle="tab">languages &amp; notes</a></li>
            <li role="presentation"><a href="#administrative" aria-controls="administrative" role="tab" data-toggle="tab">administrative/security</a></li>
        </ul><!-- /nav tabs -->
        <div class="tab-content" style="padding-top: 1em">

            <div role="tabpanel" class="tab-pane" id="contact">                
            <!-- begin "contact" form elements -->
            <?php foreach (['lastname','firstname','middlename','email','officePhone','mobilePhone','homePhone',
                    'address1','address2','city','state', 'zip'
                ] as $elementName) :
                        $element = $fieldset->get($elementName);
               ?><div class="form-group">
                    <label class="control-label col-sm-3"><?php echo $element->getLabel()?></label>
                    <div class="col-sm-9"><?php echo $this->formElement($element),$this->formElementErrors($element) ?>
                    </div>
                </div>
            <?php endforeach; ?>
            <!-- end "contact" form elements -->
            </div><!-- /tab-pane ================================================================================ -->
            <div role="tabpanel" class="tab-pane" id="languages-pane">
                <div class="form-group">                
                    <div class="col-sm-10 col-sm-offset-2 form-inline"><?php 
                    $languageSelect = $fieldset->get('language-select'); 
                    echo $this->formSelect($languageSelect),$this->formElementErrors($languageSelect) ;
                    //$this->formSelect($fieldset->get('interpreter-languages'));
                    $shit = $fieldset->get('interpreter-languages');
                    echo $this->formSelect($shit);
                    ?><button id="btn-add-language" class="btn btn-info" title="add this language">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        <span class="sr-only">add language</span></button><?php
                    echo $this->formElementErrors($shit);                 
                ?></div>
            </div>
            <div class="form-group panel panel-default" id="languages">
            <?php            
            $interpreterLanguages =  $form->getObject()->getInterpreterLanguages(); 
            $fed_certification_options = ['-1' => 'N/A', 1 => 'yes', 0 => 'no', ];
            if (count($interpreterLanguages)):
                $i = 0;
                foreach ($interpreterLanguages as $ilanguage):
                    $columns = 'col-sm-offset-3 col-sm-3' ;
                    $language = $ilanguage->getLanguage();
                    $language_id = $language->getId();
                    $certifiable = $language->isFederallyCertified();
                    $language_id =  $language->getId();                    
                ?>
                <div class="<?php echo $columns?>  interpreter-language language-name" id="language-<?php echo $language_id ?>"><?php 
                        echo $this->escapeHtml($ilanguage->getLanguage());
                        // language and interpreter ids as hidden inputs
                       ?><input type="hidden" name="interpreter[interpreter-languages][<?php echo $i?>][language_id]" value="<?php echo $language_id; ?>">
                    </div>
                    <div class="col-sm-6 form-inline interpreter-language language-certification"><?php
                         $element = new Element\Select("interpreter[interpreter-languages][$i][federalCertification]");
                         $selected = $ilanguage->getFederalCertification() === null ? "-1" : (int)$ilanguage->getFederalCertification();
                         $element->setValueOptions($fed_certification_options)
                                 ->setValue($selected)
                                 ->setAttributes(['class' => 'form-control','id'=>'fed-certification-'.$i]);
                         $disabled = false;
                         if (! $ilanguage->isCertifiable()) :  
                             $element->setAttribute("disabled","disabled");  
                            $disabled = true; 
                         else : 
                             $element->setValueOptions(['' => ' ', 1 => 'yes', 0 => 'no', ]);
                         endif;
                         ?><label for="fed-certification-<?php echo $i?>">fed certified</label><?php
                         echo $this->formSelect($element);                       
                         ?> <button class="btn btn-warning btn-xs btn-remove-language" title="remove this language"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                            <span class="sr-only">remove language</span></button><?php
                            if ($disabled) : // supply a value, else undefined index error ?>
                                <input type="hidden" name="interpreter[interpreter-languages][<?php echo $i ?>][federalCertification]" value="-1">
                       <?php endif;
                    ?>
                    </div>
                <?php
                    $i++;
                endforeach;                
            endif; // count(languages)   
            $element = $fieldset->get('comments');
            ?>                
                </div><!-- /languages .form-group -->
                <label class="control-label col-sm-3"><?php echo $element->getLabel()?></label>
                <div class="col-sm-9 form-inline" style="margin-bottom:1em"><?php echo $this->formElement($element), $this->formElementErrors($element)?></div>
                    
                
            </div><!-- /languages-pane ================================================================================ -->

            <div role="tabpanel" class="tab-pane" id="administrative">
                <?php foreach (['hat','active','fingerprintDate','securityClearanceDate','contractExpirationDate','oathDate',] as $elementName):

                    $element = $fieldset->get($elementName);?>
                <div class="form-group">
                    <label class="control-label col-sm-3"><?php echo $element->getLabel()?></label>
                    <div class="col-sm-9"><?php echo $this->formElement($element),$this->formElementErrors($element) ?></div>
                </div>
                <?php endforeach; ?>
                <!--
                
Don't mix with other components

Do not mix form groups or grid column classes directly with input groups. Instead, nest the input group inside of the form group or grid-related element.

                -->
                <?php 

                foreach (['dob','ssn'] as $elementName) :
                    if (! $fieldset->has($elementName)) : break; endif;
                    $element = $fieldset->get($elementName);?>
                <div class="form-group">
                    <label class="control-label col-sm-3"><?php echo $element->getLabel()?></label>
                    <div class="col-sm-9 form-inline encrypted">
                        <?php 
                        if (!$this->obscure_values) :?>
                        <div class="input-group-btn"><?php echo $this->formElement($element)?><button data-toggle="modal" data-target="#login-modal" title="re-authenticate to view or edit sensitive data fields" class="btn btn-default" type="button"><span class="glyphicon glyphicon-lock"></span><span class="sr-only">unlock</span></button>                        
                        <?php echo $this->formElementErrors($element) ?>
                        </div>                    
                       <?php else:
                            $encrypted = $element->getValue();
                            $element->setValue('**************');
                        ?><div class="input-group-btn"><?php echo $this->formElement($element)?><button data-toggle="modal" data-target="#login-modal" title="re-authenticate to view or edit sensitive data fields" class="btn btn-default" type="button"><span class="glyphicon glyphicon-lock"></span><span class="sr-only">unlock</span></button>                        
                        <?php 
                            echo $this->formElementErrors($element);
                            $hidden = (new \Zend\Form\Element\Hidden($element->getName()))->setValue($encrypted);
                            echo $this->formHidden($hidden);
                        ?>
                        </div>
                            
                       <?php endif;?>
                       
                    </div>
                </div>
                <?php  endforeach;?>   

            </div><!--  / .tab-pane -->
        </div><!-- /tab-content -->
        <div style="margin-top:1em" class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <?php
                $csrf = $form->get('csrf');
                echo $this->formHidden($csrf),$this->formElementErrors($csrf) ;
                echo $this->formHidden($fieldset->get('id'));
                echo $this->formSubmit($form->get('submit'));?>
            </div>       
        </div><!-- / .form-group -->
        
  <?php echo $this->form()->closeTag(); ?>  
</div><!-- /wrapper -->
<?php // the following is only for "edit" action: re-authentication dialog for reading DOB and SSN ?>
<div class="modal" id="login-modal" tabindex="-1" role="dialog" aria-labelledby="modal-auth-title">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 id="modal-auth-title" class="modal-title">Please re-authenticate for access to dob/ssn</h4>
      </div>
      <div class="modal-body">
          <div id="div-auth-error" class="alert alert-danger alert-dismissable hidden">Authentication failed.</div>
          <form autocomplete="off" id="form-login">
              <div class="form-group">
                <label class="sr-only"  for="identity">username or email</label>
                <input name="identity" autocomplete="off" value="" type="text" class="form-control" id="identity" placeholder="email or username">
              </div>
              <div class="form-group">
                <label class="sr-only" for="password">password</label>
                <input name="password" autocomplete="off" value="" type="password" class="form-control" id="password" placeholder="password">
              </div>              
              <?php if ($this->login_csrf): 
                        echo $this->formHidden($this->login_csrf),$this->formElementErrors($this->login_csrf) ;
                    endif;
               ?>
          </form>
      </div>
      <div class="modal-footer" style="text-align: center">
        <button type="button" id="auth-submit" class="btn btn-primary">authenticate</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">cancel</button>        
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<script type="text/javascript">
/** 
 * attach event listeners
 * 
 * @todo live in its own file ?
 * @todo refactor to make less long and monolithic
 */

/*
 * we will need this later!
$('#dob').datepicker("option",{
    maxDate: "-18y",
    minDate : "-100y",         
    yearRange : "-100:-18",
});
*/
$(function(){
    // this is bullshit. what we really want is the button thingy on the same 
    // line as the input but it wraps unless we set the containing element's 
    // class to form-inline, which makes it too narrow
    $('#dob, #ssn').css({width:'70%'}).attr({disabled:"disabled"});
    // ================================================
    
    // make the first tab active, unless we are coming back from a validation
    // error -- to be continued
    if (! $(".validationError").length ) {
        //$('.tab-content .tab-pane:first').show();
        $('#nav-tabs li:first a').tab("show");//addClass("active")
    } else {
        // figure out which tab/pane to activate
    }
    if (! Modernizr.inputtypes.date) {
        $('input.date').datepicker({
            changeMonth: true,
            changeYear: true
        });
        /** @todo 
         * set datepicker options to display year for dob, if element exists 
         * set options to constrain security_clearance, fingerprint etc date ranges
         */
        $('#fingerprint_date, #oath_date, #security_clearance_date').datepicker("option",{
            
            maxDate: 0
        });
        
    }
    /**
     * add a working language. note that if the markup in the form
     * changes, this likewise has to be changed
     */
    $('#btn-add-language').on('click',function(event){
        
        event.preventDefault();        
        var language_id = $('#language-select').val();
        if (! language_id) { return; }
        if ($('#language-'+language_id).length) { return; }
        // collect data
        var index = $('.language-name').length;
        var languageSelect = $('#language-select');
        var languageOption = languageSelect.children(':selected');
        var languageName =  languageOption.text();
        var certifiable  = languageOption.data().certifiable;
        // create div to contain textual language and hidden input
        var div_0 = $('<div class="col-sm-offset-3 col-sm-3 interpreter-language language-name"></div>')
                .attr({id : 'language-'+language_id});
        div_0.html(
           languageName +
            '<input type="hidden" name="interpreter[interpreter-languages]['+index+'][language_id]" value="'+language_id+'">'
        );
        // create div to contain federal-certification select and delete button
        var div_1 = $('<div class="col-sm-6 form-inline interpreter-language language-certification"></div>');
        div_1.append('<label for="fed-certification-'+index+'">fed certified</label>');
        var certificationSelectElement = $('<select>')
                        .addClass("form-control")
                        .attr({name: "interpreter[interpreter-languages]["+index+"][federalCertification]"});        
        if (certifiable) {
            certificationSelectElement
                .append($("<option>").attr({value:"",label:""}).text(""))
                .append('<option value="1">yes</option><option value="0">no</option>');
        } else {
            // non-certified languages have select disabled plus hidden input
            certificationSelectElement.append($("<option>")
                    .attr({value:"-1",selected : "selected"})
                    .text("N/A")
            ).attr({disabled : "disabled"});
            div_1.append(
                 $('<input>').attr({
                     type : "hidden",
                     name : certificationSelectElement.attr("name"),
                     value : "-1"
                 })
            );
        }
        div_1.append(certificationSelectElement)
            .append(' <button class="btn btn-warning btn-xs btn-remove-language" title="remove this language">'
                    + '<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>'
                    +  '<span class="sr-only">remove language</span></button>');
        // append these divs to div#languages 
        $('#languages').append([div_0,div_1]);
        // and reset language select
        languageSelect.val('');
        
    });
     /* remove a language *********************************************/
    $('#languages').on("click", ".btn-remove-language",function(event){
        event.preventDefault();
        var div =  $(this).closest("div");
        var divs = div.add(div.prev());
        divs.slideUp(function(){divs.remove();});
    });
    // prevent the damn browser from autocompleting
    // http://stackoverflow.com/questions/31439047/prevent-browser-from-remembering-credentials-password/43874591#43874591
    $('#login-modal').on("show.bs.modal",function(){
        $('#identity, #password').val("");
        
    })
    
    $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
        //alert("shit.");
        // return false
        //e.target // newly activated tab
        //e.relatedTarget // previous active tab
    });
    
    $('#auth-submit').on("click",function(){
       
        var input = {
            identity : $('#identity').val(),
            password : $('#password').val(),
            login_csrf : $('input[name="login_csrf"').val()
        }
        var url = window.basePath + '/login';
        $.post(url, input, function(response    ){
            if (response.validation_errors) {
                /* 
                    we need to refresh the CSRF token
                */
                $('input[name="login_csrf"').val(response.login_csrf);
                return displayValidationErrors(response.validation_errors);
            }            
            if (response.authenticated) {
                $('#login-modal').modal('hide');
                var encrypted_dob =  $("input[name='interpreter[dob]']").last();
                var encrypted_ssn =  $("input[name='interpreter[ssn]']").last();
                $.post('/vault/decrypt',{
                    dob : encrypted_dob.val(),
                    ssn : encrypted_ssn.val()
                },function(response){
                    // to do:  finish this
                    if (response.error) {
                        alert("shit: "+response.error);
                        return;
                    }
                    encrypted_dob.remove();
                    encrypted_ssn.remove();
                    $('#ssn, #dob').removeAttr("disabled");
                    $('#ssn').val(response.ssn);
                    var dob = $('#dob').val();
                    if (dob) {
                        $('#dob').val(window.moment(response.dob,"YYYY-MM-DD").format("MM/DD/YYYY"));
                    }  else {
                        $('#dob').val("");
                    }
                    // hide the lock thingies
                    $('button[data-target="#login-modal"]').hide();  
                },'json');
            } else {
                return alert("auth failed.");
            }
        });
        
    });


});

// TO DO move this somewhere accessible to all
displayValidationErrors = function(validationErrors) {
    $('.validation-error').hide();
    for (var field in validationErrors) {
        for (var key in validationErrors[field]) {
            var message = validationErrors[field][key];
            var element = $('#' +field);
            var errorDiv = $('#error_'+field);
            if (! errorDiv.length) { errorDiv = null;}
            if (! element.length) { console.log("is there no element #"+field+ " ?");
                // look for an existing div by id
                if ($('#error_'+field).length) {
                    $('#error_'+field).html(message);
                } else {
                    console.warn("no element with id "+field + ", and nowhere to put message "+message);
                }
            } else {
                errorDiv = errorDiv || element.next('.validation-error');
                if (! errorDiv.length) {
                    errorDiv = $('<div/>')
                        .addClass('alert alert-warning validation-error')
                        .attr({id:'error_'+field})
                    .insertAfter(element);
                }
                errorDiv.html(message).show();
            }
            break;
        }
    } 
};
</script>
