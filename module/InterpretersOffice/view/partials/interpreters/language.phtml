<?php
/**
 * this is now DEPRECATED and will be removed
 *
 * module/InterpretersOffice/view/partials/interpreters/language.phtml
 *
 * this is intended to keep the HTML in one place and the Javascript simple
 * for rendering/dynamically adding language fieldsets to the Interpreter form
 *
 * expected variables are either:
 *
 *  (1) $this->interpreterLanguages (Doctrine\ORM\PersistentCollection)
 *  and $this->collection (Zend\Form\Element\Collection)
 *     or
 *  (2) $this->language (a Language entity) and an index number $this->index
 */

if ($this->language) :
    $this->count = 1;   // counter for the `for` loop
else :
    $this->count = $this->interpreterLanguages->count();
endif;

for ($i = 0; $i < $this->count; $i++) :
    if ($this->collection) { // rendering existing languages
        $fs = $this->collection->get($i);
        $language_element = $fs->get('language');

        $this->language = $language_element->getValue();
        if (is_object($this->language)) {
            // we are a GET request
            $certifiable = $this->language->isFederallyCertified();
            $language_id = $this->language->getId();
            $language_name = $this->language->getName();
        } else {
            // we are a POST request; $language_element will have a (string) id
            // value, not a Language entity
            $language_id = $this->language;
            $array = $this->interpreterLanguages->toArray();
             /** @todo figure out a better way? */
            foreach ($array as $j => $il) {
                $language = $il->getLanguage();
                if ($language->getId() == $language_id) {
                    $certifiable = $language->isFederallyCertified();
                    $language_name = $language->getName();
                    // make the array smaller to speed up the next iteration
                    unset($array[$j]);
                    break;
                }
            }
        }

        $language_element->setValue($language_id);
        $certification_element = $fs->get('federalCertification');
        $certification_element->setAttribute('id', "fed-certification-{$i}");
        // the default select renderer seems to need some help, because
        // -1 is truthy so it gets its selected attribute set and breaks our
        // unit test
        $value = $certification_element->getValue();
        if ($value === null) {
            $certification_element->setValue('-1');
        } else {
            $certification_element->setValue($value ? '1' : '0');
        }
    } else { // XHR request for some markup
        $i = $this->index;
        $certifiable = $this->language->isFederallyCertified();
        $language_id = $this->language->getId();
        // don't know why the fu-hell we can't get these initialized
        // with constructor options. grrrr!!!
        $language_element = (new \Zend\Form\Element\Hidden(
            "interpreter[interpreterLanguages][$i][language]"
        ))->setValue($language_id);
        $certification_element = new \Zend\Form\Element\Select(
            "interpreter[interpreterLanguages][$i][federalCertification]"
        );
        $certification_element->setAttributes([
            'class' => 'form-control',
            'id' => "fed-certification-{$i}"
        ]);
        $empty_label = $certifiable ? '' : "N/A";
        $value_options = ['-1' => $empty_label, 1 => 'yes', 0 => 'no', ];
        $certification_element->setValueOptions($value_options);
    }
    if (! $certifiable) :
        // federal certification is not applicable
        $certification_element->setAttribute('disabled', 'disabled');
    endif; // now, the markup

    ?><div class="col-sm-offset-1 col-sm-3  interpreter-language language-name" id="language-<?php echo $language_id ?>">
        <?php
        echo $this->formElement($language_element),  $this->escapeHtml($language_name);
        ?>
    </div>
    <div class="col-sm-5 form-inline interpreter-language language-certification">
        <label for="fed-certification-<?php echo $i ?>">fed certification:</label>
    <?php echo $this->formElement($certification_element);
        ?><button class="btn btn-warning btn-xs btn-remove-language" title="remove this language"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            <span class="sr-only">remove language</span></button>
        <?php if ($certification_element->getAttribute('disabled')) : // supply a value, to avoid undefined index error  ?>
            <input type="hidden" name="interpreter[interpreterLanguages][<?php echo $i ?>][federalCertification]" value="-1">
        <?php endif; ?>
        <div class="alert alert-warning validation-error" style="display:none"></div>                
    </div>
<?php endfor;?>

